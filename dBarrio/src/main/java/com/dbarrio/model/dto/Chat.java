package com.dbarrio.model.dto;
// Generated 17-ene-2017 20:27:04 by Hibernate Tools 4.3.1.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Chat generated by hbm2java
 */
@Entity
@Table(name = "chat", catalog = "mercadolocal")
public class Chat implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -5173266581305488389L;
	private Integer idchat;
	private Usuario usuarioByUsuarioReceptor;
	private Usuario usuarioByUsuarioEnvio;
	private byte[] mensaje;
	private Date fecha;
	private Boolean recibido;
	private Boolean leido;

	public Chat() {
	}

	public Chat(Usuario usuarioByUsuarioReceptor, Usuario usuarioByUsuarioEnvio) {
		this.usuarioByUsuarioReceptor = usuarioByUsuarioReceptor;
		this.usuarioByUsuarioEnvio = usuarioByUsuarioEnvio;
	}

	public Chat(Usuario usuarioByUsuarioReceptor, Usuario usuarioByUsuarioEnvio, byte[] mensaje, Date fecha,
			Boolean recibido, Boolean leido) {
		this.usuarioByUsuarioReceptor = usuarioByUsuarioReceptor;
		this.usuarioByUsuarioEnvio = usuarioByUsuarioEnvio;
		this.mensaje = mensaje;
		this.fecha = fecha;
		this.recibido = recibido;
		this.leido = leido;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idchat", unique = true, nullable = false)
	public Integer getIdchat() {
		return this.idchat;
	}

	public void setIdchat(Integer idchat) {
		this.idchat = idchat;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "usuarioReceptor", nullable = false)
	public Usuario getUsuarioByUsuarioReceptor() {
		return this.usuarioByUsuarioReceptor;
	}

	public void setUsuarioByUsuarioReceptor(Usuario usuarioByUsuarioReceptor) {
		this.usuarioByUsuarioReceptor = usuarioByUsuarioReceptor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "usuarioEnvio", nullable = false)
	public Usuario getUsuarioByUsuarioEnvio() {
		return this.usuarioByUsuarioEnvio;
	}

	public void setUsuarioByUsuarioEnvio(Usuario usuarioByUsuarioEnvio) {
		this.usuarioByUsuarioEnvio = usuarioByUsuarioEnvio;
	}

	@Column(name = "mensaje")
	public byte[] getMensaje() {
		return this.mensaje;
	}

	public void setMensaje(byte[] mensaje) {
		this.mensaje = mensaje;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha", length = 19)
	public Date getFecha() {
		return this.fecha;
	}

	public void setFecha(Date fecha) {
		this.fecha = fecha;
	}

	@Column(name = "recibido")
	public Boolean getRecibido() {
		return this.recibido;
	}

	public void setRecibido(Boolean recibido) {
		this.recibido = recibido;
	}

	@Column(name = "leido")
	public Boolean getLeido() {
		return this.leido;
	}

	public void setLeido(Boolean leido) {
		this.leido = leido;
	}

}
