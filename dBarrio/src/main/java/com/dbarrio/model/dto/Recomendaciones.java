package com.dbarrio.model.dto;
// Generated 20-ene-2017 19:00:30 by Hibernate Tools 4.3.1.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Recomendaciones generated by hbm2java
 */
@Entity
@Table(name = "recomendaciones", catalog = "mercadolocal")
public class Recomendaciones implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -8655042613198479370L;
	private Integer idrecomendaciones;
	private Usuario usuarioByIdUsuarioEnvio;
	private Usuario usuarioByIdUsuarioReceptor;
	private Date fecha;
	private String mensaje;
	private Integer puntuacion;

	public Recomendaciones() {
	}

	public Recomendaciones(Usuario usuarioByIdUsuarioEnvio, Usuario usuarioByIdUsuarioReceptor) {
		this.usuarioByIdUsuarioEnvio = usuarioByIdUsuarioEnvio;
		this.usuarioByIdUsuarioReceptor = usuarioByIdUsuarioReceptor;
	}

	public Recomendaciones(Usuario usuarioByIdUsuarioEnvio, Usuario usuarioByIdUsuarioReceptor, Date fecha,
			String mensaje, Integer puntuacion) {
		this.usuarioByIdUsuarioEnvio = usuarioByIdUsuarioEnvio;
		this.usuarioByIdUsuarioReceptor = usuarioByIdUsuarioReceptor;
		this.fecha = fecha;
		this.mensaje = mensaje;
		this.puntuacion = puntuacion;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idrecomendaciones", unique = true, nullable = false)
	public Integer getIdrecomendaciones() {
		return this.idrecomendaciones;
	}

	public void setIdrecomendaciones(Integer idrecomendaciones) {
		this.idrecomendaciones = idrecomendaciones;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idUsuarioEnvio", nullable = false)
	public Usuario getUsuarioByIdUsuarioEnvio() {
		return this.usuarioByIdUsuarioEnvio;
	}

	public void setUsuarioByIdUsuarioEnvio(Usuario usuarioByIdUsuarioEnvio) {
		this.usuarioByIdUsuarioEnvio = usuarioByIdUsuarioEnvio;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idUsuarioReceptor", nullable = false)
	public Usuario getUsuarioByIdUsuarioReceptor() {
		return this.usuarioByIdUsuarioReceptor;
	}

	public void setUsuarioByIdUsuarioReceptor(Usuario usuarioByIdUsuarioReceptor) {
		this.usuarioByIdUsuarioReceptor = usuarioByIdUsuarioReceptor;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha", length = 19)
	public Date getFecha() {
		return this.fecha;
	}

	public void setFecha(Date fecha) {
		this.fecha = fecha;
	}

	@Column(name = "mensaje")
	public String getMensaje() {
		return this.mensaje;
	}

	public void setMensaje(String mensaje) {
		this.mensaje = mensaje;
	}

	@Column(name = "puntuacion")
	public Integer getPuntuacion() {
		return this.puntuacion;
	}

	public void setPuntuacion(Integer puntuacion) {
		this.puntuacion = puntuacion;
	}

}
